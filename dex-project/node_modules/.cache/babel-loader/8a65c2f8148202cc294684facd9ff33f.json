{"ast":null,"code":"import _regeneratorRuntime from \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Content from './Content';\nimport { connect } from 'react-redux';\nimport { loadWeb3, loadAccount, loadToken, loadExchange } from '../store/interactions';\nimport { contractsLoadedSelector } from '../store/selectors';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.loadBlockchainData(this.props.dispatch);\n    }\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n        var web3, networkId, token, exchange;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return loadWeb3(dispatch);\n\n              case 2:\n                web3 = _context.sent;\n                _context.next = 5;\n                return web3.eth.net.getId();\n\n              case 5:\n                networkId = _context.sent;\n                _context.next = 8;\n                return loadAccount(web3, dispatch);\n\n              case 8:\n                _context.next = 10;\n                return loadToken(web3, networkId, dispatch);\n\n              case 10:\n                token = _context.sent;\n\n                if (token) {\n                  _context.next = 14;\n                  break;\n                }\n\n                window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.');\n                return _context.abrupt(\"return\");\n\n              case 14:\n                _context.next = 16;\n                return loadExchange(web3, networkId, dispatch);\n\n              case 16:\n                exchange = _context.sent;\n\n                if (exchange) {\n                  _context.next = 20;\n                  break;\n                }\n\n                window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.');\n                return _context.abrupt(\"return\");\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function loadBlockchainData(_x) {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }), this.props.contractsLoaded ? /*#__PURE__*/React.createElement(Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 40\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 54\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/victordelimafreire/decentralized-exchange-a-project/dex-project/src/components/App.js"],"names":["React","Component","Navbar","Content","connect","loadWeb3","loadAccount","loadToken","loadExchange","contractsLoadedSelector","App","loadBlockchainData","props","dispatch","web3","eth","net","getId","networkId","token","window","alert","exchange","contractsLoaded","mapStateToProps","state"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,YAJF,QAKO,uBALP;AAMA,SAASC,uBAAT,QAAwC,oBAAxC;;IAEMC,G;;;;;;;;;;;;;WACJ,8BAAqB;AACnB,WAAKC,kBAAL,CAAwB,KAAKC,KAAL,CAAWC,QAAnC;AACD;;;;yFAED,iBAAyBA,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqBR,QAAQ,CAACQ,QAAD,CAD7B;;AAAA;AACQC,gBAAAA,IADR;AAAA;AAAA,uBAE0BA,IAAI,CAACC,GAAL,CAASC,GAAT,CAAaC,KAAb,EAF1B;;AAAA;AAEQC,gBAAAA,SAFR;AAAA;AAAA,uBAGQZ,WAAW,CAACQ,IAAD,EAAOD,QAAP,CAHnB;;AAAA;AAAA;AAAA,uBAIsBN,SAAS,CAACO,IAAD,EAAOI,SAAP,EAAkBL,QAAlB,CAJ/B;;AAAA;AAIQM,gBAAAA,KAJR;;AAAA,oBAKMA,KALN;AAAA;AAAA;AAAA;;AAMIC,gBAAAA,MAAM,CAACC,KAAP,CAAa,wGAAb;AANJ;;AAAA;AAAA;AAAA,uBASyBb,YAAY,CAACM,IAAD,EAAOI,SAAP,EAAkBL,QAAlB,CATrC;;AAAA;AASQS,gBAAAA,QATR;;AAAA,oBAUMA,QAVN;AAAA;AAAA;AAAA;;AAWIF,gBAAAA,MAAM,CAACC,KAAP,CAAa,2GAAb;AAXJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAgBA,kBAAS;AACP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEI,KAAKT,KAAL,CAAWW,eAAX,gBAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7B,gBAA2C;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF/C,CADF;AAMD;;;;EA5BetB,S;;AA+BlB,SAASuB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLF,IAAAA,eAAe,EAAEd,uBAAuB,CAACgB,KAAD;AADnC,GAAP;AAGD;;AAED,eAAerB,OAAO,CAACoB,eAAD,CAAP,CAAyBd,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport Navbar from './Navbar'\nimport Content from './Content'\nimport { connect } from 'react-redux'\nimport {\n  loadWeb3,\n  loadAccount,\n  loadToken,\n  loadExchange\n} from '../store/interactions'\nimport { contractsLoadedSelector } from '../store/selectors'\n\nclass App extends Component {\n  componentWillMount() {\n    this.loadBlockchainData(this.props.dispatch)\n  }\n\n  async loadBlockchainData(dispatch) {\n    const web3 = await loadWeb3(dispatch)\n    const networkId = await web3.eth.net.getId()\n    await loadAccount(web3, dispatch)\n    const token = await loadToken(web3, networkId, dispatch)\n    if(!token) {\n      window.alert('Token smart contract not detected on the current network. Please select another network with Metamask.')\n      return\n    }\n    const exchange = await loadExchange(web3, networkId, dispatch)\n    if(!exchange) {\n      window.alert('Exchange smart contract not detected on the current network. Please select another network with Metamask.')\n      return\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        { this.props.contractsLoaded ? <Content /> : <div className=\"content\"></div> }\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contractsLoaded: contractsLoadedSelector(state)\n  }\n}\n\nexport default connect(mapStateToProps)(App)"]},"metadata":{},"sourceType":"module"}